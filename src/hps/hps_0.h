#ifndef _ALTERA_HPS_0_H_
#define _ALTERA_HPS_0_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'soc_system' in
 * file './soc_system.sopcinfo'.
 */

/*
 * This file contains macros for module 'hps_0' and devices
 * connected to the following masters:
 *   h2f_axi_master
 *   h2f_lw_axi_master
 * 
 * Do not include this header file and another header file created for a
 * different module or master group at the same time.
 * Doing so may result in duplicate macro names.
 * Instead, use the system header file which has macros with unique names.
 */

/*
 * Macros for device 'sysid_qsys', class 'altera_avalon_sysid_qsys'
 * The macros are prefixed with 'SYSID_QSYS_'.
 * The prefix is the slave descriptor.
 */
#define SYSID_QSYS_COMPONENT_TYPE altera_avalon_sysid_qsys
#define SYSID_QSYS_COMPONENT_NAME sysid_qsys
#define SYSID_QSYS_BASE 0x1000
#define SYSID_QSYS_SPAN 8
#define SYSID_QSYS_END 0x1007
#define SYSID_QSYS_ID 2899645186
#define SYSID_QSYS_TIMESTAMP 1572012549

/*
 * Macros for device 'led_pio', class 'altera_avalon_pio'
 * The macros are prefixed with 'LED_PIO_'.
 * The prefix is the slave descriptor.
 */
#define LED_PIO_COMPONENT_TYPE altera_avalon_pio
#define LED_PIO_COMPONENT_NAME led_pio
#define LED_PIO_BASE 0x3000
#define LED_PIO_SPAN 16
#define LED_PIO_END 0x300f
#define LED_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define LED_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define LED_PIO_CAPTURE 0
#define LED_PIO_DATA_WIDTH 10
#define LED_PIO_DO_TEST_BENCH_WIRING 0
#define LED_PIO_DRIVEN_SIM_VALUE 0
#define LED_PIO_EDGE_TYPE NONE
#define LED_PIO_FREQ 50000000
#define LED_PIO_HAS_IN 0
#define LED_PIO_HAS_OUT 1
#define LED_PIO_HAS_TRI 0
#define LED_PIO_IRQ_TYPE NONE
#define LED_PIO_RESET_VALUE 0

/*
 * Macros for device 'dipsw_pio', class 'altera_avalon_pio'
 * The macros are prefixed with 'DIPSW_PIO_'.
 * The prefix is the slave descriptor.
 */
#define DIPSW_PIO_COMPONENT_TYPE altera_avalon_pio
#define DIPSW_PIO_COMPONENT_NAME dipsw_pio
#define DIPSW_PIO_BASE 0x4000
#define DIPSW_PIO_SPAN 16
#define DIPSW_PIO_END 0x400f
#define DIPSW_PIO_IRQ 0
#define DIPSW_PIO_BIT_CLEARING_EDGE_REGISTER 1
#define DIPSW_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define DIPSW_PIO_CAPTURE 1
#define DIPSW_PIO_DATA_WIDTH 10
#define DIPSW_PIO_DO_TEST_BENCH_WIRING 0
#define DIPSW_PIO_DRIVEN_SIM_VALUE 0
#define DIPSW_PIO_EDGE_TYPE ANY
#define DIPSW_PIO_FREQ 50000000
#define DIPSW_PIO_HAS_IN 1
#define DIPSW_PIO_HAS_OUT 0
#define DIPSW_PIO_HAS_TRI 0
#define DIPSW_PIO_IRQ_TYPE EDGE
#define DIPSW_PIO_RESET_VALUE 0

/*
 * Macros for device 'button_pio', class 'altera_avalon_pio'
 * The macros are prefixed with 'BUTTON_PIO_'.
 * The prefix is the slave descriptor.
 */
#define BUTTON_PIO_COMPONENT_TYPE altera_avalon_pio
#define BUTTON_PIO_COMPONENT_NAME button_pio
#define BUTTON_PIO_BASE 0x5000
#define BUTTON_PIO_SPAN 16
#define BUTTON_PIO_END 0x500f
#define BUTTON_PIO_IRQ 1
#define BUTTON_PIO_BIT_CLEARING_EDGE_REGISTER 1
#define BUTTON_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define BUTTON_PIO_CAPTURE 1
#define BUTTON_PIO_DATA_WIDTH 4
#define BUTTON_PIO_DO_TEST_BENCH_WIRING 0
#define BUTTON_PIO_DRIVEN_SIM_VALUE 0
#define BUTTON_PIO_EDGE_TYPE FALLING
#define BUTTON_PIO_FREQ 50000000
#define BUTTON_PIO_HAS_IN 1
#define BUTTON_PIO_HAS_OUT 0
#define BUTTON_PIO_HAS_TRI 0
#define BUTTON_PIO_IRQ_TYPE EDGE
#define BUTTON_PIO_RESET_VALUE 0

/*
 * Macros for device 'jtag_uart', class 'altera_avalon_jtag_uart'
 * The macros are prefixed with 'JTAG_UART_'.
 * The prefix is the slave descriptor.
 */
#define JTAG_UART_COMPONENT_TYPE altera_avalon_jtag_uart
#define JTAG_UART_COMPONENT_NAME jtag_uart
#define JTAG_UART_BASE 0x20000
#define JTAG_UART_SPAN 8
#define JTAG_UART_END 0x20007
#define JTAG_UART_IRQ 2
#define JTAG_UART_READ_DEPTH 64
#define JTAG_UART_READ_THRESHOLD 8
#define JTAG_UART_WRITE_DEPTH 64
#define JTAG_UART_WRITE_THRESHOLD 8

/*
 * Macros for device 'ILC', class 'interrupt_latency_counter'
 * The macros are prefixed with 'ILC_'.
 * The prefix is the slave descriptor.
 */
#define ILC_COMPONENT_TYPE interrupt_latency_counter
#define ILC_COMPONENT_NAME ILC
#define ILC_BASE 0x30000
#define ILC_SPAN 256
#define ILC_END 0x300ff

/*
 * Macros for device 'fifo_h2f_in', class 'altera_avalon_fifo'
 * The macros are prefixed with 'FIFO_H2F_IN_'.
 * The prefix is the slave descriptor.
 */
#define FIFO_H2F_IN_COMPONENT_TYPE altera_avalon_fifo
#define FIFO_H2F_IN_COMPONENT_NAME fifo_h2f_in
#define FIFO_H2F_IN_BASE 0x60000
#define FIFO_H2F_IN_SPAN 8
#define FIFO_H2F_IN_END 0x60007
#define FIFO_H2F_IN_AVALONMM_AVALONMM_DATA_WIDTH 32
#define FIFO_H2F_IN_AVALONMM_AVALONST_DATA_WIDTH 32
#define FIFO_H2F_IN_BITS_PER_SYMBOL 8
#define FIFO_H2F_IN_CHANNEL_WIDTH 0
#define FIFO_H2F_IN_ERROR_WIDTH 0
#define FIFO_H2F_IN_FIFO_DEPTH 8
#define FIFO_H2F_IN_SINGLE_CLOCK_MODE 1
#define FIFO_H2F_IN_SYMBOLS_PER_BEAT 4
#define FIFO_H2F_IN_USE_AVALONMM_READ_SLAVE 0
#define FIFO_H2F_IN_USE_AVALONMM_WRITE_SLAVE 1
#define FIFO_H2F_IN_USE_AVALONST_SINK 0
#define FIFO_H2F_IN_USE_AVALONST_SOURCE 1
#define FIFO_H2F_IN_USE_BACKPRESSURE 0
#define FIFO_H2F_IN_USE_IRQ 0
#define FIFO_H2F_IN_USE_PACKET 1
#define FIFO_H2F_IN_USE_READ_CONTROL 0
#define FIFO_H2F_IN_USE_REGISTER 0
#define FIFO_H2F_IN_USE_WRITE_CONTROL 0

/*
 * Macros for device 'fifo_f2h_out_out', class 'altera_avalon_fifo'
 * The macros are prefixed with 'FIFO_F2H_OUT_OUT_'.
 * The prefix is the slave descriptor.
 */
#define FIFO_F2H_OUT_OUT_COMPONENT_TYPE altera_avalon_fifo
#define FIFO_F2H_OUT_OUT_COMPONENT_NAME fifo_f2h_out
#define FIFO_F2H_OUT_OUT_BASE 0x70000
#define FIFO_F2H_OUT_OUT_SPAN 8
#define FIFO_F2H_OUT_OUT_END 0x70007
#define FIFO_F2H_OUT_OUT_AVALONMM_AVALONMM_DATA_WIDTH 32
#define FIFO_F2H_OUT_OUT_AVALONMM_AVALONST_DATA_WIDTH 32
#define FIFO_F2H_OUT_OUT_BITS_PER_SYMBOL 8
#define FIFO_F2H_OUT_OUT_CHANNEL_WIDTH 0
#define FIFO_F2H_OUT_OUT_ERROR_WIDTH 0
#define FIFO_F2H_OUT_OUT_FIFO_DEPTH 512
#define FIFO_F2H_OUT_OUT_SINGLE_CLOCK_MODE 1
#define FIFO_F2H_OUT_OUT_SYMBOLS_PER_BEAT 4
#define FIFO_F2H_OUT_OUT_USE_AVALONMM_READ_SLAVE 1
#define FIFO_F2H_OUT_OUT_USE_AVALONMM_WRITE_SLAVE 0
#define FIFO_F2H_OUT_OUT_USE_AVALONST_SINK 1
#define FIFO_F2H_OUT_OUT_USE_AVALONST_SOURCE 0
#define FIFO_F2H_OUT_OUT_USE_BACKPRESSURE 0
#define FIFO_F2H_OUT_OUT_USE_IRQ 1
#define FIFO_F2H_OUT_OUT_USE_PACKET 1
#define FIFO_F2H_OUT_OUT_USE_READ_CONTROL 0
#define FIFO_F2H_OUT_OUT_USE_REGISTER 0
#define FIFO_F2H_OUT_OUT_USE_WRITE_CONTROL 1

/*
 * Macros for device 'fifo_f2h_out_in_csr', class 'altera_avalon_fifo'
 * The macros are prefixed with 'FIFO_F2H_OUT_IN_CSR_'.
 * The prefix is the slave descriptor.
 */
#define FIFO_F2H_OUT_IN_CSR_COMPONENT_TYPE altera_avalon_fifo
#define FIFO_F2H_OUT_IN_CSR_COMPONENT_NAME fifo_f2h_out
#define FIFO_F2H_OUT_IN_CSR_BASE 0x80000
#define FIFO_F2H_OUT_IN_CSR_SPAN 32
#define FIFO_F2H_OUT_IN_CSR_END 0x8001f
#define FIFO_F2H_OUT_IN_CSR_IRQ 3
#define FIFO_F2H_OUT_IN_CSR_AVALONMM_AVALONMM_DATA_WIDTH 32
#define FIFO_F2H_OUT_IN_CSR_AVALONMM_AVALONST_DATA_WIDTH 32
#define FIFO_F2H_OUT_IN_CSR_BITS_PER_SYMBOL 8
#define FIFO_F2H_OUT_IN_CSR_CHANNEL_WIDTH 0
#define FIFO_F2H_OUT_IN_CSR_ERROR_WIDTH 0
#define FIFO_F2H_OUT_IN_CSR_FIFO_DEPTH 512
#define FIFO_F2H_OUT_IN_CSR_SINGLE_CLOCK_MODE 1
#define FIFO_F2H_OUT_IN_CSR_SYMBOLS_PER_BEAT 4
#define FIFO_F2H_OUT_IN_CSR_USE_AVALONMM_READ_SLAVE 1
#define FIFO_F2H_OUT_IN_CSR_USE_AVALONMM_WRITE_SLAVE 0
#define FIFO_F2H_OUT_IN_CSR_USE_AVALONST_SINK 1
#define FIFO_F2H_OUT_IN_CSR_USE_AVALONST_SOURCE 0
#define FIFO_F2H_OUT_IN_CSR_USE_BACKPRESSURE 0
#define FIFO_F2H_OUT_IN_CSR_USE_IRQ 1
#define FIFO_F2H_OUT_IN_CSR_USE_PACKET 1
#define FIFO_F2H_OUT_IN_CSR_USE_READ_CONTROL 0
#define FIFO_F2H_OUT_IN_CSR_USE_REGISTER 0
#define FIFO_F2H_OUT_IN_CSR_USE_WRITE_CONTROL 1


#endif /* _ALTERA_HPS_0_H_ */
