{-
 - IP packets (inside Ethernet frames) for testing ICMPEcho.
 -
 - Copyright (c) 2019-2021 QBayLogic B.V.
 - All rights reserved.
 -
 - Redistribution and use in source and binary forms, with or without
 - modification, are permitted provided that the following conditions are met:
 -
 - 1. Redistributions of source code must retain the above copyright notice,
 - this list of conditions and the following disclaimer.
 -
 - 2. Redistributions in binary form must reproduce the above copyright notice,
 - this list of conditions and the following disclaimer in the documentation
 - and/or other materials provided with the distribution.
 -
 - THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 - AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 - IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 - ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 - LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 - CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 - SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 - INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 - CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 - ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 - POSSIBILITY OF SUCH DAMAGE.
 -}
module Test.ICMPEcho.TestPackets where

import Clash.Prelude

{-
 - An ICMP Echo Request packet
 -
 - It was captured in the wild, from an Ethernet interface.
 -}
echoReqPacket :: [Unsigned 8]
echoReqPacket
    = [ 0x52, 0x54, 0x00, 0xeb, 0x9b, 0xd0, 0x00, 0x50, 0xb6, 0x78, 0x57
      , 0xbe, 0x08, 0x00, 0x45, 0x00, 0x00, 0x54, 0xbc, 0x15, 0x40, 0x00
      , 0x40, 0x01, 0x39, 0xe8, 0xc0, 0xa8, 0x7a, 0x01, 0x0a, 0x00, 0x00
      , 0x02, 0x08, 0x00, 0x65, 0x14, 0x0f, 0xd4, 0x00, 0x01, 0xd7, 0xd8
      , 0xd7, 0x5d, 0x00, 0x00, 0x00, 0x00, 0x14, 0x0d, 0x01, 0x00, 0x00
      , 0x00, 0x00, 0x00, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17
      , 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f, 0x20, 0x21, 0x22
      , 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d
      , 0x2e, 0x2f, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37 ]

{-
 - An ICMP Echo Reply packet
 -
 - It is the expected transformation as performed by ICMPEcho.fakeReply on
 - 'echoReqPacket' above.
 -}
echoReplPacket :: [Unsigned 8]
echoReplPacket
    = [ 0x00, 0x50, 0xb6, 0x78, 0x57, 0xbe, 0x52, 0x54, 0x00, 0xeb, 0x9b
      , 0xd0, 0x08, 0x00, 0x45, 0x00, 0x00, 0x54, 0xbc, 0x15, 0x40, 0x00
      , 0x40, 0x01, 0x39, 0xe8, 0x0a, 0x00, 0x00, 0x02, 0xc0, 0xa8, 0x7a
      , 0x01, 0x00, 0x00, 0x6d, 0x14, 0x0f, 0xd4, 0x00, 0x01, 0xd7, 0xd8
      , 0xd7, 0x5d, 0x00, 0x00, 0x00, 0x00, 0x14, 0x0d, 0x01, 0x00, 0x00
      , 0x00, 0x00, 0x00, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17
      , 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f, 0x20, 0x21, 0x22
      , 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d
      , 0x2e, 0x2f, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37 ]

{-
 - A TCP SYN packet
 -
 - It was captured in the wild from an Ethernet interface, directed at the IP
 - host "implemented" in the FPGA in 'ICMPEcho'.
 -
 - The precise packet doesn't matter, what matters is it is a packet directed
 - at the FPGA that is not an ICMP Echo Request.
 -}
tcpSynPacket :: [Unsigned 8]
tcpSynPacket
    = [ 0x52, 0x54, 0x00, 0xeb, 0x9b, 0xd0, 0x00, 0x50, 0xb6, 0x78, 0x57
      , 0xbe, 0x08, 0x00, 0x45, 0x10, 0x00, 0x3c, 0xb8, 0x34, 0x40, 0x00
      , 0x40, 0x06, 0x3d, 0xcc, 0xc0, 0xa8, 0x7a, 0x01, 0x0a, 0x00, 0x00
      , 0x02, 0xcc, 0x08, 0x00, 0x50, 0x19, 0x95, 0x72, 0xe6, 0x00, 0x00
      , 0x00, 0x00, 0xa0, 0x02, 0xfa, 0xf0, 0x44, 0x83, 0x00, 0x00, 0x02
      , 0x04, 0x05, 0xb4, 0x04, 0x02, 0x08, 0x0a, 0x21, 0x83, 0x49, 0x89
      , 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x03, 0x07 ]
